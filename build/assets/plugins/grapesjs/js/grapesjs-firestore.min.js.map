{"version":3,"sources":["webpack://grapesjs-firestore/webpack/universalModuleDefinition","webpack://grapesjs-firestore/webpack/bootstrap","webpack://grapesjs-firestore/external \"grapesjs\"","webpack://grapesjs-firestore/./src/index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_grapesjs","_grapesjs2","default","plugins","add","editor","opts","arguments","length","undefined","options","apiKey","authDomain","projectId","docId","collectionName","enableOffline","settings","timestampsInSnapshots","sm","StorageManager","db","doc","collection","dbSettings","onError","err","code","getDocId","getAsyncDoc","clb","firebase","initializeApp","fs","firestore","callback","enablePersistence","then","catch","getAsyncCollection","cll","getDoc","setDocId","id","load","keys","clbError","exists","data","store","set"],"mappings":";CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,EAAAG,QAAA,aACA,mBAAAC,eAAAC,IACAD,QAAA,YAAAJ,GACA,iBAAAC,QACAA,QAAA,sBAAAD,EAAAG,QAAA,aAEAJ,EAAA,sBAAAC,EAAAD,EAAA,UARA,CASCO,OAAA,SAAAC,GACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAT,QAGA,IAAAC,EAAAM,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAX,YAUA,OANAY,EAAAH,GAAAI,KAAAZ,EAAAD,QAAAC,IAAAD,QAAAQ,GAGAP,EAAAU,GAAA,EAGAV,EAAAD,QA2CA,OAtCAQ,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAhB,EAAAiB,EAAAC,GACAV,EAAAW,EAAAnB,EAAAiB,IACAG,OAAAC,eAAArB,EAAAiB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAV,EAAAiB,EAAA,SAAAzB,GACAoB,OAAAC,eAAArB,EAAA,cAAiD0B,OAAA,KAIjDlB,EAAAmB,EAAA,SAAA1B,GACA,IAAAiB,EAAAjB,KAAA2B,WACA,WAA2B,OAAA3B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAO,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDtB,EAAAyB,EAAA,GAIAzB,IAAA0B,EAAA,mBCnEAjC,EAAAD,QAAAM,2PCAA6B,EAAA3B,EAAA,iDAEe4B,EAAAC,QAASC,QAAQC,IAAI,qBAAsB,SAACC,GAAsB,IAAdC,EAAcC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MACzEG,KAEJC,OAAQ,GAGRC,WAAY,GAGZC,UAAW,GAGXC,MAAO,MAGPC,eAAgB,YAGhBC,eAAe,EAGfC,UAAYC,uBAAuB,IAC9BZ,GAEDa,EAAKd,EAAOe,eAGdC,SACAC,SACAR,SACAS,SACEZ,EAASD,EAAQC,OACjBC,EAAaF,EAAQE,WACrBC,EAAYH,EAAQG,UACpBW,EAAad,EAAQO,SACrBQ,EAAU,SAAAC,GAAA,OAAOP,EAAGM,QAVN,YAU2BC,EAAIC,MAAQD,IAGrDE,EAAW,kBAAMd,GAASJ,EAAQI,OAqBlCe,EAAc,SAACC,IAnBM,SAACA,GAC1B,GAAIP,EAAY,OAAOO,EAAIP,GAC3BQ,SAASC,eAAgBrB,SAAQC,aAAYC,cAC7C,IAAMoB,EAAKF,SAASG,YACpBD,EAAGhB,SAASO,GAEZ,IAAMW,EAAW,WACfd,EAAKU,SAASG,YACdX,EAAaF,EAAGE,WAAWb,EAAQK,gBACnCe,EAAIP,IAGFb,EAAQM,cACViB,EAAGG,oBAAoBC,KAAKF,GAAUG,MAAMb,GAE5CU,IAKFI,CAAmB,SAAAC,GACjBlB,EAAMkB,EAAIlB,IAAIM,KACdE,EAAIR,MAIRH,EAAGf,IAzCiB,aA0ClBqC,OA9Ba,kBAAMnB,GAgCnBM,WAEAc,SALkB,SAKTC,GACP7B,EAAQ6B,GAGVC,KATkB,SASbC,EAAMf,EAAKgB,GACdjB,EAAY,SAAAP,GACVA,EAAIjC,MACHgD,KAAK,SAAAf,GAAA,OAAOA,EAAIyB,QAAUjB,EAAIR,EAAI0B,UAClCV,MAAMQ,MAIXG,MAjBkB,SAiBZD,EAAMlB,EAAKgB,GACfjB,EAAY,SAAAP,GACVA,EAAI4B,IAAIF,GACPX,KAAKP,GACLQ,MAAMQ","file":"dist/grapesjs-firestore.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"grapesjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"grapesjs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"grapesjs-firestore\"] = factory(require(\"grapesjs\"));\n\telse\n\t\troot[\"grapesjs-firestore\"] = factory(root[\"grapesjs\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import grapesjs from 'grapesjs';\n\nexport default grapesjs.plugins.add('grapesjs-firestore', (editor, opts = {}) => {\n  const options = { ...{\n    // Firebase API key\n    apiKey: '',\n\n    // Firebase Auth domain\n    authDomain: '',\n\n    // Cloud Firestore project ID\n    projectId: '',\n\n    // Document id\n    docId: 'gjs',\n\n    // Collection name\n    collectionName: 'templates',\n\n    // Enable support for offline data persistence\n    enableOffline: true,\n\n    // Database settings (https://firebase.google.com/docs/reference/js/firebase.firestore.Settings)\n    settings: { timestampsInSnapshots: true },\n  },  ...opts };\n\n  const sm = editor.StorageManager;\n  const storageName = 'firestore';\n\n  let db;\n  let doc;\n  let docId;\n  let collection;\n  const apiKey = options.apiKey;\n  const authDomain = options.authDomain;\n  const projectId = options.projectId;\n  const dbSettings = options.settings;\n  const onError = err => sm.onError(storageName, err.code || err);\n\n  const getDoc = () => doc;\n  const getDocId = () => docId || options.docId;\n\n  const getAsyncCollection = (clb) => {\n    if (collection) return clb(collection);\n    firebase.initializeApp({ apiKey, authDomain, projectId });\n    const fs = firebase.firestore();\n    fs.settings(dbSettings);\n\n    const callback = () => {\n      db = firebase.firestore();\n      collection = db.collection(options.collectionName);\n      clb(collection);\n    }\n\n    if (options.enableOffline) {\n      fs.enablePersistence().then(callback).catch(onError);\n    } else {\n      callback();\n    }\n  };\n\n  const getAsyncDoc = (clb) => {\n    getAsyncCollection(cll => {\n      doc = cll.doc(getDocId());\n      clb(doc);\n    });\n  };\n\n  sm.add(storageName, {\n    getDoc,\n\n    getDocId,\n\n    setDocId(id) {\n      docId = id;\n    },\n\n    load(keys, clb, clbError) {\n      getAsyncDoc(doc => {\n        doc.get()\n        .then(doc => doc.exists && clb(doc.data()))\n        .catch(clbError);\n      });\n    },\n\n    store(data, clb, clbError) {\n      getAsyncDoc(doc => {\n        doc.set(data)\n        .then(clb)\n        .catch(clbError);\n      });\n    }\n  });\n});\n"],"sourceRoot":""}